version: '3.8'

networks:
  prometheus-net:
    external: true
    name: ${PROMETHEUS_NETWORK:-prometheus-net}

volumes:
  prometheus_data:
  swarmetheus_files:

# configs:
#   cadvisor:
#     file: env/cadvisor.env
#     name: cadvisor
#   node-exporter:
#     file: env/node-exporter.env
#     name: node-exporter

services:
  swarmetheus:
    image: rjchicago/swarmetheus:${VERSION:-latest}
    build:
      context: swarmetheus
    entrypoint: /swarmetheus/scripts/run.sh
    networks:
      - prometheus-net
    environment:
      ENV: "${ENV:-dev}"
      # HOSTNAME: "{{.Node.Hostname}}" # <-- Standard Swarm Mode
      PROMETHEUS_NETWORK: ${PROMETHEUS_NETWORK:-prometheus-net}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./swarmetheus/scripts:/swarmetheus/scripts
      - ./swarmetheus/env:/swarmetheus/env
      - swarmetheus_files:/swarmetheus/files
    # env_file:
    #   - swarmetheus.env
    # configs:
    #   - source: cadvisor
    #     target: /swarmetheus/env/cadvisor.env
    #   - source: node-exporter
    #     target: /swarmetheus/env/node-exporter.env
    deploy:
      mode: global

  swarmetheus-files:
    image: rjchicago/swarmetheus:${VERSION:-latest}
    entrypoint: /swarmetheus/scripts/write_files.sh
    networks:
      - prometheus-net
    environment:
      ENV: "${ENV:-dev}"
      # HOSTNAME: "{{.Node.Hostname}}" # <-- Swarm Mode
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./swarmetheus/scripts:/swarmetheus/scripts
      - swarmetheus_files:/swarmetheus/files
    deploy:
      placement:
        constraints:
          - node.role==manager
      replicas: 1
      restart_policy:
        condition: none

  prometheus:
    image: prom/prometheus
    networks:
      - prometheus-net
    volumes:
      - prometheus_data:/prometheus_data
      - swarmetheus_files:/etc/prometheus/files/swarmetheus
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

